package Main;

import Book.bookutil;
import CustomerOrder.cartutil;
import CustomerOrder.orderinfo;
import com.itextpdf.text.*;
import com.itextpdf.text.Font;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import java.awt.*;
import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Date;

public class pdf {

    private static String FILE = "FirstPdf.pdf";
    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 16,
            Font.BOLD);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

    public static void pdf(ArrayList<orderinfo> Item ,String name) {
        try {
            Document document = new Document();
            FILE=name+"_"+bookutil.getPurchase(Item.get(0).getOrderid())+".pdf";
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            addMetaData(document);
            addTitlePage(document,name,Item);

            document.close();
            Desktop.getDesktop().open(new File(FILE));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // iText allows to add metadata to the PDF which can be viewed in your Adobe
    // Reader
    // under File -> Properties
    private static void addMetaData(Document document) {
        document.addTitle("Order");
        document.addSubject("Book Order");
        document.addKeywords("book,order,purchase");
        document.addAuthor("XYZ Book Dot Com");
        document.addCreator("Latif Siddiq Sunny");
    }

    private static void addTitlePage(Document document,String name,ArrayList<orderinfo> Item )
            throws DocumentException {
        Paragraph preface = new Paragraph();
        // We add one empty line
        addEmptyLine(preface, 1);
        // Lets write a big header
        preface.add(new Paragraph("Book Order", catFont));
        addEmptyLine(preface, 1);
        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph(
                "Purchase report  for: " + name, //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                smallBold));


        // Will create: Report generated by: _name, _date
        preface.add(new Paragraph(
                "Purchase report generated on: " +  new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                smallBold));
        preface.add(new Paragraph("Purchase Id: "+ bookutil.getPurchase(Item.get(0).getOrderid())));
        addEmptyLine(preface, 3);

        PdfPTable table = new PdfPTable(4);

        // t.setBorderColor(BaseColor.GRAY);
        // t.setPadding(4);
        // t.setSpacing(4);
        // t.setBorderWidth(1);

        PdfPCell c1 = new PdfPCell(new Phrase("Serial Number"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Book Name"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Total Amount"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);

        c1 = new PdfPCell(new Phrase("Price"));
        c1.setHorizontalAlignment(Element.ALIGN_CENTER);
        table.addCell(c1);
        table.setHeaderRows(1);
        int i=1;
        int sum=0;
        for(orderinfo e:Item) {
            table.addCell(String .valueOf(i));
            table.addCell(e.getBookname());
            table.addCell(e.getAmount());
            table.addCell(String .valueOf(Integer.parseInt(e.getAmount())*Integer.parseInt( bookutil.getBookPrice(bookutil.getBookid(e.getBookname()))))+" /-");
        i++;
        sum+=Integer.parseInt(e.getAmount())*Integer.parseInt( bookutil.getBookPrice(bookutil.getBookid(e.getBookname())));
        }
        table.addCell("");
        table.addCell("");
        table.addCell("Net Payable");
        table.addCell(String .valueOf(sum)+" /-");

        table.addCell("");
        table.addCell("");
        table.addCell("Discount");
        table.addCell(bookutil.getOffer()+" %");

        table.addCell("");
        table.addCell("");
        table.addCell("Net Payable\n(With Discount)");
        table.addCell(String .valueOf(sum-(sum*.01*Integer.parseInt(bookutil.getOffer())))+" /-");

        document.add(preface);
        document.add(table);

    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
}
